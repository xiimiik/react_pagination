{"version":3,"sources":["components/ItemsList/ItemsList.tsx","utils.ts","components/Pagination/Pagination.tsx","components/PerPageSelector/PerPageSelector.tsx","App.tsx","index.tsx"],"names":["ItemsList","items","map","title","id","getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","setCurrentPage","pageCount","Math","ceil","pageNumbers","isFirstPage","isLastPage","className","classNames","disabled","href","onClick","num","active","PerPageSelector","postsPerPage","onSelect","value","onChange","htmlFor","App","useState","setPostsPerPage","startIndex","endIndex","visibleItems","slice","event","Number","target","length","ReactDOM","render","document","getElementById"],"mappings":"kMAMaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACT,oBACE,UAAQ,OADV,SAIGD,GAFIC,S,gBCZR,SAASC,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,ECGF,IAAMG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eAEMC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAcd,EAAW,EAAGW,GAC5BI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAcnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAAUJ,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,WAvBVN,GACHL,EAAeD,EAAc,IAiB3B,oBAUDK,EAAYjB,KAAI,SAAAyB,GAAG,OAClB,oBACEL,UAAWC,IAAW,YAAa,CACjCK,OAAQd,IAAgBa,IAF5B,SAME,mBACE,UAAQ,WACRL,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBAAMX,EAAeY,IAJhC,SAMGA,KAREA,MAYT,oBACEL,UAAWC,IAAW,YAAa,CACjCC,SAAUH,IAFd,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAAS,WAjDVL,GACHN,EAAeD,EAAc,IA2C3B,wBCnEKe,EAAmC,SAAC,GAG1C,IAFLC,EAEI,EAFJA,aACAC,EACI,EADJA,SAEA,OACE,sBAAKT,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRlB,GAAG,kBACHkB,UAAU,eACVU,MAAOF,EACPG,SAAUF,EALZ,UAOE,wBAAQC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkBZ,UAAU,qBAA3C,gCChBArB,EAAgBI,EAAW,EADd,IAEhBH,KAAI,SAAAO,GAAC,MAAK,CAAEN,MAAM,QAAD,OAAUM,GAAKL,GAAIK,MAE1B0B,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOtB,EAAP,KAAoBC,EAApB,KACA,EAAwCqB,mBAAS,GAAjD,mBAAON,EAAP,KAAqBO,EAArB,KAEMC,GAAcxB,EAAc,GAAKgB,EACjCS,EAAWD,EAAaR,EATb,MAWbQ,EAAaR,EACXU,EAAevC,EAAMwC,MAAMH,EAAYC,GAO7C,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCwB,EAAa,EAD9C,cACqDC,EADrD,eAvBa,GAuBb,OAIA,cAAC,EAAD,CACET,aAAcA,EACdC,SAfsB,SAACW,GAC3BL,EAAgBM,OAAOD,EAAME,OAAOZ,QACpCjB,EAAe,MAgBb,cAAC,EAAD,CACEd,MAAOuC,IAGT,cAAC,EAAD,CACE5B,MAAOX,EAAM4C,OACbhC,QAASiB,EACThB,YAAaA,EACbC,eAAgBA,QC9CxB+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d4abb3e3.chunk.js","sourcesContent":["import { Item } from '../../types/Item';\n\ntype Props = {\n  items: Item[]\n};\n\nexport const ItemsList: React.FC<Props> = ({ items }) => {\n  return (\n    <ul>\n      {items.map(({ title, id }) => (\n        <li\n          data-cy=\"item\"\n          key={id}\n        >\n          {title}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number\n  perPage: number\n  currentPage: number\n  setCurrentPage: (num: number) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  setCurrentPage,\n}) => {\n  const pageCount = Math.ceil(total / perPage);\n  const pageNumbers = getNumbers(1, pageCount);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pageCount;\n\n  const changeToPrevPage = () => {\n    if (!isFirstPage) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const changeToNextPage = () => {\n    if (!isLastPage) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', {\n          disabled: isFirstPage,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={() => changeToPrevPage()}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map(num => (\n        <li\n          className={classNames('page-item', {\n            active: currentPage === num,\n          })}\n          key={num}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${num}`}\n            onClick={() => setCurrentPage(num)}\n          >\n            {num}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames('page-item', {\n          disabled: isLastPage,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={() => changeToNextPage()}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","type Props = {\n  postsPerPage: number\n  onSelect: (event: React.ChangeEvent<HTMLSelectElement>) => void\n};\n\nexport const PerPageSelector: React.FC<Props> = ({\n  postsPerPage,\n  onSelect,\n}) => {\n  return (\n    <div className=\"form-group row\">\n      <div className=\"col-3 col-sm-2 col-xl-1\">\n        <select\n          data-cy=\"perPageSelector\"\n          id=\"perPageSelector\"\n          className=\"form-control\"\n          value={postsPerPage}\n          onChange={onSelect}\n        >\n          <option value=\"3\">3</option>\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n        </select>\n      </div>\n\n      <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n        items per page\n      </label>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { ItemsList } from './components/ItemsList/ItemsList';\nimport { Pagination } from './components/Pagination';\nimport { PerPageSelector } from './components/PerPageSelector/PerPageSelector';\nimport { Item } from './types/Item';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst itemsCount = 42;\nconst items: Item[] = getNumbers(1, itemsCount)\n  .map(n => ({ title: `Item ${n}`, id: n }));\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(5);\n\n  const startIndex = (currentPage - 1) * postsPerPage;\n  const endIndex = startIndex + postsPerPage > itemsCount\n    ? itemsCount\n    : startIndex + postsPerPage;\n  const visibleItems = items.slice(startIndex, endIndex);\n\n  const handlePerPageSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPostsPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${endIndex} of ${itemsCount})`}\n      </p>\n\n      <PerPageSelector\n        postsPerPage={postsPerPage}\n        onSelect={handlePerPageSelect}\n      />\n\n      <ItemsList\n        items={visibleItems}\n      />\n\n      <Pagination\n        total={items.length}\n        perPage={postsPerPage}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}